{"version":3,"sources":["App.js","reportWebVitals.js","index.js"],"names":["App","state","searchParam","gifsList","handleSearch","event","input","target","value","setState","handleSubimit","preventDefault","fetchGhiphys","searchParameter","fetch","then","response","json","data","imagesList","map","img","images","catch","error","console","log","this","className","onSubmit","htmlFor","type","name","id","onChange","autoFocus","gifImg","index","src","original","url","alt","Component","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","document","getElementById"],"mappings":"0NAsEeA,G,kNAlEbC,MAAQ,CACNC,YAAa,SACbC,SAAU,I,EAGZC,aAAe,SAACC,GACd,IAAIC,EAAQD,EAAME,OAAOC,MACzB,EAAKC,SAAS,CACZP,YAAYI,K,EAIhBI,cAAgB,SAACL,GACfA,EAAMM,iBACN,EAAKC,gB,EAGPA,aAAe,WACb,IACMC,EAAkB,EAAKZ,MAAMC,YACnCY,MAAM,gDAAD,OAFO,mCAEP,cAA0DD,IAC9DE,MAAM,SAAAC,GAAQ,OAAIA,EAASC,UAC3BF,MAAK,SAACG,GACL,IAAMC,EAAaD,EAAKA,KAAKE,KAAI,SAAAC,GAC/B,OAAOA,EAAIC,UAEb,EAAKb,SAAS,CACZN,SAAUgB,OAGbI,OAAM,SAAAC,GAAK,OAAIC,QAAQC,IAAIF,O,kEAG9BG,KAAKf,iB,+BAIH,OACE,sBAAKgB,UAAU,UAAf,UACE,iCACE,2CAEF,8BACE,uBAAMC,SAAUF,KAAKjB,cAArB,UACE,uBAAOoB,QAAQ,UAAf,oBACA,uBAAOC,KAAK,OAAOC,KAAK,SAASC,GAAG,UAAUC,SAAWP,KAAKvB,aAAe+B,WAAS,IACtF,uBAAOJ,KAAK,SAASvB,MAAM,gBAG/B,qBAAKoB,UAAU,uBAAf,SAGID,KAAK1B,MAAME,SAASiB,KAAI,SAACgB,EAAQC,GAC/B,OACE,8BACE,qBAAKC,IAAMF,EAAOG,SAASC,IAAMC,IAAKL,EAAOG,SAASC,OAD7CH,e,GAvDTK,cCSHC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqB9B,MAAK,YAAkD,IAA/C+B,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACL,cAAC,EAAD,IACFC,SAASC,eAAe,SAM1BX,M","file":"static/js/main.2bf3fdab.chunk.js","sourcesContent":["import React, { Component } from \"react\";\nimport './App.css';\n\nclass App extends Component {\n  state = {\n    searchParam: \"cheesy\",\n    gifsList: [],\n  }\n\n  handleSearch = (event) => {\n    let input = event.target.value\n    this.setState({\n      searchParam:input,\n    });\n  }\n\n  handleSubimit = (event) => {\n    event.preventDefault();\n    this.fetchGhiphys();\n  }\n\n  fetchGhiphys = () => {\n    const key = \"Sbo9lDsCSy4UC17qPvLd3IowQmgap5ng\";\n    const searchParameter = this.state.searchParam;\n    fetch(`https://api.giphy.com/v1/gifs/search?api_key=${key}&q=${searchParameter}`)\n    .then( response => response.json() )\n    .then((data) => {\n      const imagesList = data.data.map(img => {\n        return img.images\n      })\n      this.setState({\n        gifsList: imagesList\n      })\n    })\n    .catch(error => console.log(error))\n  }\n  componentDidMount() {\n  this.fetchGhiphys();\n  }\n\n  render() {\n    return (\n      <div className=\"wrapper\">\n        <header>\n          <h1>GIPHYFY</h1>\n        </header>\n        <div>\n          <form onSubmit={this.handleSubimit}>\n            <label htmlFor=\"gsearch\">Search</label>\n            <input type=\"text\" name=\"search\" id=\"gsearch\" onChange={ this.handleSearch } autoFocus />\n            <input type=\"submit\" value=\"Submit\" />\n          </form>\n        </div>\n        <div className=\"giphyImagesContainer\">\n          {\n            \n            this.state.gifsList.map((gifImg, index) => {\n              return (\n                <div key={ index }>\n                  <img src={ gifImg.original.url } alt={gifImg.original.url}></img>\n                </div>\n              )\n            })\n          }\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n    <App />,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}